trigger:
  - master

pool:
  vmImage: "windows-latest"

stages:
  - stage: first_stage
    jobs:
      - job: FIRST_JOB
        steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                # Write your commands here
                echo "Checking complete"
          
          - template: "./template.yml"
          
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                echo 'Hello World'
          
          - task: Bash@3
            displayName: First Check within same JOB
            inputs:
              targetType: 'inline'
              script: |
                echo $(PythonScript.myVar) 

      # - job: Check  
      #   dependsOn: FIRST_JOB  
      #   variables: 
      #       myVarFromJobA: $[ dependencies.FIRST_JOB.outputs['PythonScript.myVar'] ] 
      #   steps:
      #   - task: Bash@3
      #     displayName: Second Check from different JOB
      #     inputs:
      #       targetType: 'inline'
      #       script: |
      #         echo $(myVarFromJobA) 

      - job: waitForValidation
        condition: and(succeeded(), eq(variables['myVarFromJobA'], 'true'), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
        variables:
          - name : harsh
            value : hardeshm@publicisgroupe.net
          - name: myVarFromJobA
            value: $[ dependencies.FIRST_JOB.outputs['PythonScript.myVar'] ] 
        displayName: Wait for external validation
        dependsOn: FIRST_JOB  
        pool: server
        timeoutInMinutes: 4320 # job times out in 3 days
        steps:
        - task: ManualValidation@0
          timeoutInMinutes: 1440 # task times out in 1 day
          inputs:
            notifyUsers: | 
              $(harsh)
            instructions: 'Please validate the build configuration and resume'
            onTimeout: 'resume'  

  - stage: Second_Stage
    jobs:
      - job: Check  
        steps:
        - task: Bash@3
          displayName: Next Stage Skip Test
          inputs:
            targetType: 'inline'
            script: |
              echo "Hello World!"
              echo $(Build.SourceBranch)




