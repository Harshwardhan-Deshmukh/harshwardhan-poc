trigger:
  - master

pool:
  vmImage: "windows-latest"

stages:
  - stage: first_stage
    variables:
      - group: dev-variable-group
    jobs:
      - job: FIRST_JOB
        steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                # Write your commands here
                echo "Checking complete"
          
          - template: "./template.yml"
          
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                echo 'Hello World'
                echo $(lower-limit)
                echo $(upper-limit)

          
          - task: Bash@3
            displayName: First Check within same JOB
            inputs:
              targetType: 'inline'
              script: |
                echo $(PythonScript.myVar) 

      # - job: waitForValidation
      #   condition: and(succeeded(), eq(variables['myVarFromJobA'], 'true'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      #   variables:
      #     - name : harsh
      #       value : hardeshm@publicisgroupe.net
      #     - name: myVarFromJobA
      #       value: $[ dependencies.FIRST_JOB.outputs['PythonScript.myVar'] ] 
      #   displayName: Wait for external validation
      #   dependsOn: FIRST_JOB  
      #   pool: server
      #   timeoutInMinutes: 4320 # job times out in 3 days
      #   steps:
      #   - task: ManualValidation@0
      #     timeoutInMinutes: 1440 # task times out in 1 day
      #     inputs:
      #       notifyUsers: | 
      #         [Demo Project]\Contributors
      #       instructions: 'Please validate the build configuration and resume'
      #       onTimeout: 'resume'  
  
  - stage: Manual_Approval
    dependsOn: first_stage
    condition: and(succeeded(), eq(variables['myVar'], 'true'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    variables:
      - name: checker
        value : $[ stageDependencies.first_stage.FIRST_JOB.outputs['PythonScript.MyVar'] ]
    jobs:
    - deployment: A
      # condition: and(succeeded(), eq(variables['myVar'], 'true'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      displayName: Check Approval
      environment: 'dev'
      strategy:                  
        runOnce:
          deploy:
            steps:
            - bash: echo $(checker)
              name: varCheck

  - stage: Second_Stage
    # dependsOn: Manual_Approval
    jobs:
      - job: Check  
        steps:
        - task: Bash@3
          displayName: Next Stage Skip Test
          inputs:
            targetType: 'inline'
            script: |
              echo "Hello World!"
              echo $(Build.SourceBranch)

